// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?
}

model User {
  id             String     @id @default(uuid())
  name           String
  email          String     @unique
  hashedPassword String
  sessions       Session[]
  role           Role       @default(USER)
  created_at     DateTime   @default(now())
  update_at      DateTime   @updatedAt
  ratings        Rating[]
  comments       Comment[]
  wishlists      Wishlist[]
  products       Product[]
  cart           Cart[]
}

model Wishlist {
  id            Int     @id @default(autoincrement())
  product       Product @relation(fields: [product_id], references: [id])
  product_id    String
  wishlist_name String  @default("default")
  user          User    @relation(fields: [user_id], references: [id])
  user_id       String
}

model Category {
  id             Int             @id @default(autoincrement())
  category_name  String          @unique
  category_group CategoryGroup[]
}

model Cart {
  id         Int      @id @default(autoincrement())
  product    Product? @relation(fields: [product_id], references: [id])
  product_id String?
  quantity   Int
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
}

model Product {
  id             String          @id @default(uuid())
  title          String
  brand          String?         @default("GENERIC_BRAND")
  excerpt        String
  description    String
  images         String[]
  price          Float
  discount       Int             @default(0)
  slug           String?
  wishlist       Wishlist[]
  cart           Cart[]
  comments       Comment[]
  ratings        Rating[]
  stock          Int
  user           User            @relation(fields: [user_id], references: [id])
  user_id        String
  created_at     DateTime        @default(now())
  category_group CategoryGroup[]
  is_deleted     Boolean         @default(false)
}

model CategoryGroup {
  id          Int      @id @default(autoincrement())
  category    Category @relation(fields: [category_id], references: [id])
  category_id Int
  product     Product  @relation(fields: [product_id], references: [id])
  product_id  String
}

model Rating {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  rating     Float
  product    Product? @relation(fields: [product_id], references: [id])
  product_id String?

}

model Comment {
  id         Int     @id @default(autoincrement())
  user       User    @relation(fields: [user_id], references: [id])
  user_id    String
  product    Product @relation(fields: [product_id], references: [id])
  product_id String

}

enum Role {
  USER
  ADMIN
}
